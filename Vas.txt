    --------------------------------------------------------------------------------------------------------
/*

    På presser jeg ut data på "std::cout". Senere vil jeg
    endre det til "return" slik at jeg ikke får det i
    terminalen 
    info om dette ligger på:
    https://stackoverflow.com/questions/15138785/how-to-read-a-file-into-vector-in-c

    */

    std::fstream biblotek;
    biblotek.open("biblotek.txt", std::ios::in);

    std::istream_iterator <std::string> iterator(biblotek), end; // Kopierer .txt filen med å iterere igjennom dataen og kopiere

    std::vector <std::string>  data(iterator, end); // Kopierer dataen inn på vecteren

    std::sort(data.begin(), data.end()); // Sortere dataen etter rekkefølge

// her går det igjennom vekteren og printer den ut på terminalen.
    for(auto i: data)
    {
        std::cout << i << std::endl;
    }    

    biblotek.close();

    --------------------------------------------------------------------------------------------------------
       
    std::vector <std::pair <std::string, std::string>> sVpBuff;

    std::fstream biblotek;
    biblotek.open("biblotek.txt", std::ios::out|std::ios::in);
//  biblotek.open("biblotek.txt", std::ios::out|std::ios::app|std::ios::in);
   
   // sVpBuff.push_back(std::make_pair(sAutherSurname, sTitle));

    if(biblotek.is_open())
    { 
      /* 
        for(int i = 0; i < sVpBuff.size(); i++)
        {
            biblotek << sVpBuff[i].first << sVpBuff[i].second << std::endl;

        }
*/
        std::string sInBuffData1;
        std::string sInBuffData2;
/*
      while(true)
      {
            biblotek >> sInBuffData1 >> sInBuffData2;
            std::cout << sInBuffData1 << " " << sInBuffData2 << std::endl;
            if(biblotek.eof()){goto LOOP;}
      } 
        LOOP:
        */
        std::cout << " -------------------------- " << std::endl;

        std::string sInBuffData3;
        std::string sInBuffData4;

        
        while(true)
        {
            biblotek >> sInBuffData3 >> sInBuffData4;
            sVpBuff.push_back(std::make_pair(sInBuffData3, sInBuffData4));
            if(biblotek.eof()){break;};
        }
    }
    biblotek.close();

    std::sort(sVpBuff.begin(), sVpBuff.end());

    for(int k = 0;k < sVpBuff.size();k++)
    {
        std::transform(sVpBuff[k].first.begin(), sVpBuff[k].first.end(), sVpBuff[k].first.begin(), ::tolower);
        std::cout << sVpBuff[k].first << " " << sVpBuff[k].second << std::endl;
    }
    


    biblotek.close();

--------------------------------------------------------------------------------------------------------
cmake_minimum_required(VERSION 3.0.0)
project(Library VERSION 0.1.0)

include(CTest)
enable_testing()

add_subdirectory(lib)
include_directories(lib)

add_executable(Library ${PROJECT_SOURCE_DIR}/src/main.cpp)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)

target_link_libraries(Library lib)
--------------------------------------------------------------------------------------------------------
